openapi: 3.0.3
info:
  title: Zenkoo API
  version: 1.0.0
  description: Documentación de la API de ahorro personal Zenkoo.
paths:
  /api/admin/model-info/:
    get:
      operationId: admin_model_info_retrieve
      summary: Información del modelo
      tags:
      - Admin
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/categories/:
    get:
      operationId: categories_list
      description: Lista y crea categorías del usuario autenticado
      summary: Listar categorías
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
        '401':
          description: No autenticado
    post:
      operationId: categories_create
      description: Lista y crea categorías del usuario autenticado
      summary: Crear una categoría
      tags:
      - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
  /api/categories/{id}/:
    get:
      operationId: categories_retrieve
      description: Recupera, actualiza o elimina una categoría del usuario autenticado
      summary: Obtener categoría por ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    put:
      operationId: categories_update
      description: Recupera, actualiza o elimina una categoría del usuario autenticado
      summary: Actualizar completamente una categoría
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    patch:
      operationId: categories_partial_update
      description: Recupera, actualiza o elimina una categoría del usuario autenticado
      summary: Actualizar parcialmente una categoría
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    delete:
      operationId: categories_destroy
      description: Recupera, actualiza o elimina una categoría del usuario autenticado
      summary: Eliminar categoría
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Categories
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
  /api/criptos/:
    get:
      operationId: criptos_list
      summary: Listar criptomonedas
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Criptos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCriptoList'
          description: ''
        '401':
          description: No autenticado
  /api/criptos/update/:
    post:
      operationId: criptos_update_create
      summary: Actualizar precios desde CoinGecko
      tags:
      - Criptos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cripto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cripto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cripto'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cripto'
          description: ''
        '401':
          description: No autenticado
        '500':
          description: Error al conectar con CoinGecko
  /api/expenses/:
    get:
      operationId: expenses_list
      description: Devuelve la lista de gastos del usuario autenticado.
      summary: Listar gastos
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - Expenses
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseList'
          description: ''
        '401':
          description: No autenticado
    post:
      operationId: expenses_create
      description: Crea un nuevo gasto asociado al usuario autenticado.
      summary: Crear un nuevo gasto
      tags:
      - Expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
  /api/expenses/{id}/:
    get:
      operationId: expenses_retrieve
      description: Devuelve los detalles de un gasto si pertenece al usuario autenticado.
      summary: Obtener gasto por ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Expenses
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
        '401':
          description: No autenticado
        '403':
          description: No tienes permiso para acceder a este gasto
        '404':
          description: Gasto no encontrado
    put:
      operationId: expenses_update
      description: Reemplaza completamente un gasto existente si pertenece al usuario
        autenticado.
      summary: Actualizar gasto completamente
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrado
    patch:
      operationId: expenses_partial_update
      description: Actualiza campos específicos de un gasto existente.
      summary: Actualizar gasto parcialmente
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrado
    delete:
      operationId: expenses_destroy
      description: Elimina un gasto por ID si pertenece al usuario autenticado.
      summary: Eliminar gasto
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Expenses
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrado
  /api/incomes/:
    get:
      operationId: incomes_list
      description: Lista y crea ingresos asociados al usuario autenticado
      summary: Listar ingresos
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - Incomes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIncomeList'
          description: ''
        '401':
          description: No autenticado
    post:
      operationId: incomes_create
      description: Lista y crea ingresos asociados al usuario autenticado
      summary: Crear un ingreso
      tags:
      - Incomes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Income'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Income'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
  /api/incomes/{id}/:
    get:
      operationId: incomes_retrieve
      summary: Obtener ingreso por ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Incomes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrado
    put:
      operationId: incomes_update
      summary: Actualizar ingreso completamente
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Incomes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Income'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Income'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrado
    patch:
      operationId: incomes_partial_update
      summary: Actualizar ingreso parcialmente
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Incomes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrado
    delete:
      operationId: incomes_destroy
      summary: Eliminar ingreso
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Incomes
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrado
  /api/ml/retrain/:
    post:
      operationId: ml_retrain_create
      summary: Reentrenar modelo desde base de datos
      tags:
      - Admin
      security:
      - jwtAuth: []
      responses:
        '200':
          description: Reentrenado correctamente
        '400':
          description: No hay suficientes datos
        '500':
          description: Error interno
  /api/monthly-plan/:
    post:
      operationId: monthly_plan_create
      description: Permite guardar la meta de ahorro (reserved_savings) y una reflexión
        mensual (reflection).
      summary: Crear o actualizar plan mensual
      tags:
      - MonthlyPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonthlyPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MonthlyPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MonthlyPlan'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlyPlan'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
  /api/monthly-plan/current/:
    get:
      operationId: monthly_plan_current_retrieve
      description: Devuelve los ingresos, gastos, ahorro real y ahorro reservado del
        mes actual, junto con la reflexión si existe.
      summary: Resumen mensual (Kakeibo)
      tags:
      - MonthlyPlan
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlyPlan'
          description: ''
        '401':
          description: No autenticado
  /api/notifications/:
    get:
      operationId: notifications_list
      description: Devuelve todas las notificaciones del usuario autenticado.
      summary: Listar notificaciones
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
        '401':
          description: No autenticado
    post:
      operationId: notifications_create
      description: Permite crear una notificación dirigida al usuario autenticado.
      summary: Crear notificación
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
  /api/notifications/{id}/:
    get:
      operationId: notifications_retrieve
      description: Devuelve el detalle de una notificación o la elimina si pertenece
        al usuario autenticado.
      summary: Obtener o eliminar notificación
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '204':
          description: Eliminada correctamente
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    delete:
      operationId: notifications_destroy
      description: Devuelve el detalle de una notificación o la elimina si pertenece
        al usuario autenticado.
      summary: Obtener o eliminar notificación
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '204':
          description: Eliminada correctamente
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
  /api/notifications/{id}/read/:
    put:
      operationId: notifications_read_update
      description: Marca una notificación como leída si pertenece al usuario autenticado.
      summary: Marcar notificación como leída
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    patch:
      operationId: notifications_read_partial_update
      description: Marca una notificación como leída si pertenece al usuario autenticado.
      summary: Marcar notificación como leída
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
  /api/notifications/delete/all/:
    delete:
      operationId: notifications_delete_all_destroy
      description: Elimina todas las notificaciones del usuario autenticado.
      summary: Eliminar todas las notificaciones
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Todas las notificaciones eliminadas
        '401':
          description: No autenticado
  /api/notifications/unread/count/:
    get:
      operationId: notifications_unread_count_retrieve
      description: Devuelve el número de notificaciones no leídas del usuario autenticado.
      summary: Contar notificaciones no leídas
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          description: Número de notificaciones no leídas
        '401':
          description: No autenticado
  /api/predict-category/:
    post:
      operationId: predict_category_create
      description: Devuelve la categoría Kakeibo sugerida en base al campo tipo o
        descripción.
      summary: Predecir categoría para un gasto o ingreso
      tags:
      - AI
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictCategoryInput'
            examples:
              EjemploVálido:
                value:
                  text: Cena en restaurante
                summary: Ejemplo válido
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PredictCategoryInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PredictCategoryInput'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: Categoría predicha
        '400':
          description: Texto no proporcionado
  /api/reflections/:
    get:
      operationId: reflections_list
      description: Lista y crea reflexiones del usuario autenticado
      summary: Listar reflexiones
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Reflections
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReflectionList'
          description: ''
        '401':
          description: No autenticado
    post:
      operationId: reflections_create
      description: Lista y crea reflexiones del usuario autenticado
      summary: Crear una reflexión
      tags:
      - Reflections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reflection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reflection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reflection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reflection'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
  /api/reflections/{id}/:
    get:
      operationId: reflections_retrieve
      description: Recupera, actualiza o elimina una reflexión del usuario autenticado
      summary: Obtener reflexión por ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Reflections
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reflection'
          description: ''
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    put:
      operationId: reflections_update
      description: Recupera, actualiza o elimina una reflexión del usuario autenticado
      summary: Actualizar completamente una reflexión
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Reflections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reflection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reflection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reflection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reflection'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    patch:
      operationId: reflections_partial_update
      description: Recupera, actualiza o elimina una reflexión del usuario autenticado
      summary: Actualizar parcialmente una reflexión
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Reflections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReflection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReflection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReflection'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reflection'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    delete:
      operationId: reflections_destroy
      description: Recupera, actualiza o elimina una reflexión del usuario autenticado
      summary: Eliminar reflexión
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Reflections
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
  /api/saving-goals/:
    get:
      operationId: saving_goals_list
      description: Devuelve todas las metas de ahorro del usuario autenticado.
      summary: Listar metas de ahorro
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - completed
          - paused
        description: |-
          * `active` - Activa
          * `paused` - Pausada
          * `completed` - Completada
      tags:
      - Saving Goals
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSavingGoalList'
          description: ''
        '401':
          description: No autenticado
    post:
      operationId: saving_goals_create
      description: Permite crear una nueva meta de ahorro asociada al usuario autenticado.
      summary: Crear una meta de ahorro
      tags:
      - Saving Goals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavingGoal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavingGoal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SavingGoal'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingGoal'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
  /api/saving-goals/{id}/:
    get:
      operationId: saving_goals_retrieve
      description: Devuelve los detalles de una meta si pertenece al usuario autenticado.
      summary: Obtener meta de ahorro por ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Saving Goals
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingGoal'
          description: ''
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    put:
      operationId: saving_goals_update
      description: Reemplaza por completo los datos de una meta.
      summary: Actualizar completamente una meta
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Saving Goals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavingGoal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavingGoal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SavingGoal'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingGoal'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    patch:
      operationId: saving_goals_partial_update
      description: Modifica algunos campos de una meta de ahorro.
      summary: Actualizar parcialmente una meta
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Saving Goals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSavingGoal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSavingGoal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSavingGoal'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingGoal'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
    delete:
      operationId: saving_goals_destroy
      description: Elimina una meta si pertenece al usuario.
      summary: Eliminar meta de ahorro
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Saving Goals
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '401':
          description: No autenticado
        '403':
          description: No autorizado
        '404':
          description: No encontrada
  /api/users/login/:
    post:
      operationId: users_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/users/profile/:
    get:
      operationId: users_profile_retrieve
      description: Devuelve los datos del usuario autenticado.
      summary: Obtener perfil
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          description: No autenticado
    put:
      operationId: users_profile_update
      description: Actualiza completamente el perfil del usuario.
      summary: Actualizar perfil
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
    patch:
      operationId: users_profile_partial_update
      description: Actualiza algunos campos del perfil del usuario.
      summary: Actualizar parcialmente perfil
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
    delete:
      operationId: users_profile_destroy
      description: Elimina al usuario autenticado de la plataforma.
      summary: Eliminar cuenta
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '401':
          description: No autenticado
  /api/users/refresh/:
    post:
      operationId: users_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      description: Permite registrar un nuevo usuario en la plataforma Zenkoo.
      summary: Registro de usuario
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: Datos inválidos (email ya registrado)
components:
  schemas:
    Category:
      type: object
      description: Serializer para gestionar categorías y subcategorías
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
        type:
          type: string
          maxLength: 10
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        parent:
          type: string
          format: uuid
          nullable: true
      required:
      - created_at
      - id
      - name
      - type
      - updated_at
      - user
    Cripto:
      type: object
      description: Serializer para ver criptomonedas
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        symbol:
          type: string
          maxLength: 10
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - price
      - symbol
      - timestamp
    Expense:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date-time
        type:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        category:
          type: string
      required:
      - amount
      - created_at
      - date
      - id
      - type
      - updated_at
      - user
    Income:
      type: object
      description: Serializer para registrar y ver ingresos del usuario
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date-time
        type:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - amount
      - created_at
      - date
      - id
      - type
      - updated_at
      - user
    MonthlyPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        month:
          type: string
          format: date
        reserved_savings:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        reflection:
          allOf:
          - $ref: '#/components/schemas/Reflection'
          readOnly: true
        reflection_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        income:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        expense:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        real_savings:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - created_at
      - expense
      - id
      - income
      - month
      - real_savings
      - reflection
    Notification:
      type: object
      description: Serializer para mostrar y gestionar notificaciones del usuario
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        message:
          type: string
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - created_at
      - id
      - message
      - user
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedCriptoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cripto'
    PaginatedExpenseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
    PaginatedIncomeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Income'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedReflectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Reflection'
    PaginatedSavingGoalList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SavingGoal'
    PatchedCategory:
      type: object
      description: Serializer para gestionar categorías y subcategorías
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
        type:
          type: string
          maxLength: 10
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        parent:
          type: string
          format: uuid
          nullable: true
    PatchedExpense:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date-time
        type:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        category:
          type: string
    PatchedIncome:
      type: object
      description: Serializer para registrar y ver ingresos del usuario
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date-time
        type:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
    PatchedNotification:
      type: object
      description: Serializer para mostrar y gestionar notificaciones del usuario
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        message:
          type: string
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
    PatchedReflection:
      type: object
      description: Serializer para crear y ver reflexiones personales del usuario
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
    PatchedSavingGoal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        target_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        current_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        deadline:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
    PatchedUser:
      type: object
      description: Serializer para mostrar datos de usuario (sin contraseña)
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        profile_picture:
          type: string
        date_of_birth:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
    PredictCategoryInput:
      type: object
      properties:
        text:
          type: string
          description: Texto del gasto o ingreso para categorizar
      required:
      - text
    Reflection:
      type: object
      description: Serializer para crear y ver reflexiones personales del usuario
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - content
      - created_at
      - id
      - title
      - updated_at
      - user
    SavingGoal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        target_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        current_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        deadline:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - created_at
      - id
      - status
      - target_amount
      - title
      - updated_at
      - user
    StatusEnum:
      enum:
      - active
      - paused
      - completed
      type: string
      description: |-
        * `active` - Activa
        * `paused` - Pausada
        * `completed` - Completada
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      description: Serializer para mostrar datos de usuario (sin contraseña)
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        profile_picture:
          type: string
        date_of_birth:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - created_at
      - date_of_birth
      - email
      - first_name
      - id
      - last_name
      - profile_picture
      - updated_at
    UserRegister:
      type: object
      description: Serializer para registrar nuevos usuarios
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 6
        profile_picture:
          type: string
        date_of_birth:
          type: string
          format: date-time
      required:
      - date_of_birth
      - email
      - first_name
      - id
      - last_name
      - password
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
